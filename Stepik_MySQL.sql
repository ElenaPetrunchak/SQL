---1)Отобрать различные (уникальные) элементы столбца amount таблицы book.

SELECT DISTINCT amount
from book;

SELECT amount
from book
GROUP BY amount;

---2)Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе. 
--- Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.

SELECT author as Автор, count(title) as Различных_книг, sum(amount) as Количество_экземпляров
from book
group by author

---3)Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . 
---Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.

SELECT author, min(price) as Минимальная_цена, max(price) as Максимальная_цена, avg(price) as Средняя_цена
from book
group by author;

---4)Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой.

SELECT author, sum(price * amount) as Стоимость, Round(sum(price * amount *(18/100))/(1+(18/100)),2) as НДС, Round(sum(price * amount/(1+(18/100))),2) as Стоимость_без_НДС
from book
group by author; 

---5)Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
---Пояснение. В задании нужно посчитать среднюю цену уникальных книг на складе, а не среднюю цену всех экземпляров книг.

Select distinct min(price) as Минимальная_цена, max(price) as Максимальная_цена, round(avg(price),2) as Средняя_цена
from book;

---6)Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. 
---Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.

select round(avg(price),2) as Средняя_цена, round(sum(price* amount),2) as Стоимость
from book
where amount between 5 and 14;

---7)Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». 
---В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. 
---Результат отсортировать по убыванию стоимости.

select author, sum(price*amount) as Стоимость
from book
where title <> 'Идиот' or 'Белая гвардия'
group by author
having sum(price*amount) > 5000
order by Стоимость DESC;

--8)Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. 
---Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.

select author, title, price 
from book
where price <= (
    select avg(price)
    from book)
order by price DESC;   
 
--9)Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.

select author, title, price
from book
where price <= (
    (select min(price) 
    from book) + 150)
order by price;    

---10)Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.


select author, title, amount
from book
where amount in (
    select amount
    from book
    group by amount
    having count(amount) = 1
    );

---11)Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. 
---В результат включить столбцы name, city, per_diem, date_first, date_last.

select name, city, per_diem, date_first, date_last
from trip 
where name like '_%а _._.'
order by date_last desc

---12) Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
select distinct name
from trip
where city = 'Москва'
order by name

---13)Для каждого города посчитать, сколько раз сотрудники в нем были.  
---Информацию вывести в отсортированном в алфавитном порядке по названию городов. Вычисляемый столбец назвать Количество. 

select city, count(city) AS Количество
from trip
group by city 
order by city;

---14)Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.

insert into book (title, author, price, amount)
SELECT title, author, price, amount 
FROM supply
Where author not in('Булгаков М.А.','Достоевский Ф.М.');

SELECT * FROM book;

---15)Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.

INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
where author not in (
    select author
    from book);
    
SELECT * FROM book;

---16)Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.

select city, count(city) as Количество
from trip
group by city
order by count(city) DESC
limit 2;

---17)Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  длительность командировки в днях, при этом первый и последний день относится к периоду командировки). 
---Последний столбец назвать Длительность. Информацию вывести в упорядоченном по убыванию длительности поездки

select name, city, DATEDIFF(date_last,date_first)+1 as Длительность
from trip
where city not in('Москва','Санкт-Петербург')
order by Длительность desc;

---18)Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени. 
---В результат включить столбцы name, city, date_first, date_last.

select name, city, date_first, date_last
from trip
where DATEDIFF(date_last,date_first) = 
    (select(min(DATEDIFF(date_last,date_first)))
    from trip);  

---19)Вывести информацию о командировках, начало и конец которых относятся к одному месяцу (год может быть любой). В результат включить столбцы name, city, date_first, date_last. 
---Строки отсортировать сначала  в алфавитном порядке по названию города, а затем по фамилии сотрудника.
   
select name, city, date_first, date_last
from trip
where month(date_first) = month(date_last)
order by city, name;


---20)Вывести название месяца и количество командировок для каждого месяца. Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце.
--- Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. Название столбцов – Месяц и Количество.

select monthname(date_first) as Месяц, count(monthname(date_first)) as Количество
from trip
group by monthname(date_first)
order by Количество DESC, Месяц;


---21)Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, первый день которых пришелся на февраль или март 2020 года. Значение суточных для каждой командировки занесено в столбец per_diem.
---Вывести фамилию и инициалы сотрудника, город, первый день командировки и сумму суточных. Последний столбец назвать Сумма. Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.

select name, city, date_first, (DATEDIFF(date_last,date_first)+1)*per_diem as Сумма
from trip
where month(date_first) = 3 OR month(date_first) = 2 and year(date_first) = 2020
order by name, Сумма desc;

---22)Вывести фамилию с инициалами и общую сумму суточных, полученных за все командировки для тех сотрудников, которые были в командировках больше чем 3 раза, в отсортированном по убыванию сумм суточных виде. Последний столбец назвать Сумма.

select name, sum((datediff(date_last, date_first)+1)*per_diem) as Сумма
from trip
where name in(
    select name
    from trip
    group by name 
    HAVING count(name) > 3)
group by name
order by сумма DESC;  
